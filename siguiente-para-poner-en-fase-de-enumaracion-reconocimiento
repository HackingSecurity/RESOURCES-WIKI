# video 17 deteccion de versionesy servicios con nmap

Vemos si esta activa nuestra maquina targe

ping -c 1 IP 

nmap -p- --open -T5 -v -n IP -oG allPorts

//Como hayamos llamado nuestro funcion en ~/.bashrc
extracport allPorts

nmap -sC -sV -v -p80 IP -oN targeted


//uso de el programa de whatweb

sudo apt install whatweb http://IP 2>/dev/null

whatweb http://IP 2>/dev/null

Uso de plugin  wappalizer para el reconocimiento de servicios web

cuando hayamos escaneado la máquina podemos ver su output 
cat targeted

# 18 tecnicas para agilizar nuestro escaneos con


ping -c 1 IP 

nmap -p- --open -T5 -v -n IP -oG allPorts 

//escanear los puertos mas importantes
nmap --top-ports 5000 --open -T5 -v -n IP -oG allPorts 

//sin arp (Pn)
nmap -sS --min-rate 5000 --open -v -n -Pn IP -oG -p- allPorts

nmap -sV -sC -p80 IP oN targeted

# 19. creacion de herramienta en bash para la deteccion de puertos TCP abiertos

Buscando una forma alternativa para ver si hay puertos abiertos, que no sea nmap que genera mucho tráfico
y ruido.

touch portScan.sh

uso de secuenciador

seq 1 10

//uso de /dev/tcp -> sockets

* https://www.linuxtotal.com.mx/index.php?cont=escanear-probar-puertos-abiertos
* https://aprenderlinux.org/5-formas-de-comprobar-si-un-puerto-esta-abierto-en-una-pc-linux-remota/



// grep -w 53 /etc/services

#!/bin/bash

#objetivo del scritp sería.
#necesitamos recorrer los 65535 puertos que hay 2^16

if [ $1 ]; then
    #Primer argumento
    ip_address=$1
    for port in $(seq 1 65535); do 
        #timeout 1 bash -c "echo '' > /dev/tcp/147.96.4.38/22" 2>/dev/null && echo "[*] Port x - Open"
        timeout 1 bash -c "echo '' > /dev/tcp/$ip_address/$port" 2>/dev/null && echo "[*] Port $port - Open" &
        
        #bash -c "echo '' > /dev/tcp/$ip_address/$port" 2>/dev/null && echo "[*] Port $port - Open" &
    done; wait
else

    #Informamos de errores 
    echo -e "\n[*] Uso: ./portScan.sh <ip-address>\n"
    exit 1
fi


# 20. creacion de herramienta en bash para el descubrimiento de equipos en la red


#!/bin/bash

#for host in (seq 2 254); do
#    timeout 1 bash -c "ping -c 1 147.96.4.$host > /dev/null 2>&1" && echo "Host 174.96.4.$1 - ACTIVE "  &
#done; wait


for host in (seq 15 30); do
    timeout 1 bash -c "ping -c 1 147.96.4.$host > /dev/null 2>&1" && echo "Host 174.96.4.$1 - ACTIVE "  &
done; wait


¿y si no está habilitado IMCP? que podriamos usar para descurbrir equipos/hosts


# 21. reconocimiento a traves de los scripts que incorpora nmap por categoria

nmap -sS --open -n -Pn -vvv -p- IP  -oG allPorts

//Conocer donde estan los script de nmap

nmap -sC -sV -p80 IP -oN targeted 

updatedb -> actualizar los archivo existentes en el sistema
locate -> comando que nos permite buscar sobre ficheros en el sistema

locate .nse -> los ficheros que nos interesa buscar para conocer que hace nmap 
locate .nse | wc -l 


Conocer las categorias de nmap

locate .nse | xargs grep "categories"
